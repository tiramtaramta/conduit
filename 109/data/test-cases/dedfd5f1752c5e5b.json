{
  "uid" : "dedfd5f1752c5e5b",
  "name" : "test_registration_process",
  "fullName" : "docs.testcases.test_all_in_one_with_wait.TestConduit#test_registration_process",
  "historyId" : "9fa64e735ed2cc0c8df7efac03dd61ba",
  "time" : {
    "start" : 1628263323643,
    "stop" : 1628263326027,
    "duration" : 2384
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'Email already taken.' == 'Your registr...s successful!'\n  - Your registration was successful!\n  + Email already taken.",
  "statusTrace" : "self = <test_all_in_one_with_wait.TestConduit object at 0x7f5f58b08910>\n\n    def test_registration_process(self):\n    \n        user_input_data = [\"user200\", \"user200@hotmail.com\", \"Userpass1\"]\n    \n        self.driver.find_element_by_xpath(\"//a[@href='#/register']\").click()\n    \n        # Beviteli mezők feltöltése a random user adatokkal\n        for i in range(len(user_input_data)):\n            self.driver.find_element_by_xpath(f\"//fieldset[{i + 1}]/input\").send_keys(user_input_data[i])\n        self.driver.find_element_by_tag_name(\"button\").click()\n    \n        time.sleep(2)\n    \n        # Sikeres regisztrációs értesítési ablak szövegének ellenőrzése\n        swal_text = find_element(self.driver, By.CLASS_NAME, \"swal-text\")\n>       assert swal_text.text == \"Your registration was successful!\"\nE       AssertionError: assert 'Email already taken.' == 'Your registr...s successful!'\nE         - Your registration was successful!\nE         + Email already taken.\n\ndocs/testcases/test_all_in_one_with_wait.py:65: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'Email already taken.' == 'Your registr...s successful!'\n  - Your registration was successful!\n  + Email already taken.",
    "statusTrace" : "self = <test_all_in_one_with_wait.TestConduit object at 0x7f5f58b08910>\n\n    def test_registration_process(self):\n    \n        user_input_data = [\"user200\", \"user200@hotmail.com\", \"Userpass1\"]\n    \n        self.driver.find_element_by_xpath(\"//a[@href='#/register']\").click()\n    \n        # Beviteli mezők feltöltése a random user adatokkal\n        for i in range(len(user_input_data)):\n            self.driver.find_element_by_xpath(f\"//fieldset[{i + 1}]/input\").send_keys(user_input_data[i])\n        self.driver.find_element_by_tag_name(\"button\").click()\n    \n        time.sleep(2)\n    \n        # Sikeres regisztrációs értesítési ablak szövegének ellenőrzése\n        swal_text = find_element(self.driver, By.CLASS_NAME, \"swal-text\")\n>       assert swal_text.text == \"Your registration was successful!\"\nE       AssertionError: assert 'Email already taken.' == 'Your registr...s successful!'\nE         - Your registration was successful!\nE         + Email already taken.\n\ndocs/testcases/test_all_in_one_with_wait.py:65: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "19b595855f61f5f0",
      "name" : "log",
      "source" : "19b595855f61f5f0.txt",
      "type" : "text/plain",
      "size" : 344
    }, {
      "uid" : "77c8ee6b57513c10",
      "name" : "stderr",
      "source" : "77c8ee6b57513c10.txt",
      "type" : "text/plain",
      "size" : 215
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "docs.testcases"
  }, {
    "name" : "suite",
    "value" : "test_all_in_one_with_wait"
  }, {
    "name" : "subSuite",
    "value" : "TestConduit"
  }, {
    "name" : "host",
    "value" : "fv-az39-521"
  }, {
    "name" : "thread",
    "value" : "3822-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "docs.testcases.test_all_in_one_with_wait"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "dedfd5f1752c5e5b.json",
  "parameterValues" : [ ]
}