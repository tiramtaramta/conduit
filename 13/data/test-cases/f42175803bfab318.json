{
  "uid" : "f42175803bfab318",
  "name" : "test_login",
  "fullName" : "docs.testcases.test_login#test_login",
  "historyId" : "3b63c183167f46b5730a46d06556452c",
  "time" : {
    "start" : 1628083347082,
    "stop" : 1628083350890,
    "duration" : 3808
  },
  "status" : "broken",
  "statusMessage" : "FileNotFoundError: [Errno 2] No such file or directory: 'registered_users.csv'",
  "statusTrace" : "def test_login():\n        browser_options = Options()\n        browser_options.headless = True\n        driver = webdriver.Chrome(ChromeDriverManager().install(), options=browser_options)\n        driver.maximize_window()\n    \n        try:\n            driver.get(\"http://localhost:1667/#/\")\n    \n            time.sleep(2)\n    \n            def login_process():\n                driver.find_element_by_xpath(\"//a[@href='#/login']\").click()\n    \n                # Automata regisztrációval létrejött felhasználók beolvasása\n                with open('registered_users.csv') as users_file:\n                    csv_reader = csv.reader(users_file, delimiter=';')\n                    for row in csv_reader:\n                        users_list = row\n    \n                # Random felhasználó kiválasztása a bejelentkezéshez\n                random_user_index = random.randint(0, len(users_list) - 1)\n                random_user_name = users_list[random_user_index]\n                user_input_data = [random_user_name, f\"{random_user_name}@hotmail.com\", \"Userpass1\"]\n    \n                # Bejelentkezési űrlap feltöltése\n                for i in range(len(user_input_data) - 1):\n                    driver.find_element_by_xpath(f\"//fieldset[{i + 1}]/input\").send_keys(user_input_data[i + 1])\n    \n                time.sleep(1)\n    \n                driver.find_element_by_tag_name(\"button\").click()\n    \n                time.sleep(2)\n    \n                # Bejelentkezés tényének ellenőrzése\n                username_check = driver.find_element_by_xpath(\"//a[starts-with(@href, '#/@')]\").text\n                assert username_check == user_input_data[0], f\"Test Failed: User is not logged in ({user_input_data[0]}).\"\n    \n                time.sleep(2)\n    \n>           login_process()\n\ndocs/testcases/test_login.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def login_process():\n        driver.find_element_by_xpath(\"//a[@href='#/login']\").click()\n    \n        # Automata regisztrációval létrejött felhasználók beolvasása\n>       with open('registered_users.csv') as users_file:\nE       FileNotFoundError: [Errno 2] No such file or directory: 'registered_users.csv'\n\ndocs/testcases/test_login.py:25: FileNotFoundError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "FileNotFoundError: [Errno 2] No such file or directory: 'registered_users.csv'",
    "statusTrace" : "def test_login():\n        browser_options = Options()\n        browser_options.headless = True\n        driver = webdriver.Chrome(ChromeDriverManager().install(), options=browser_options)\n        driver.maximize_window()\n    \n        try:\n            driver.get(\"http://localhost:1667/#/\")\n    \n            time.sleep(2)\n    \n            def login_process():\n                driver.find_element_by_xpath(\"//a[@href='#/login']\").click()\n    \n                # Automata regisztrációval létrejött felhasználók beolvasása\n                with open('registered_users.csv') as users_file:\n                    csv_reader = csv.reader(users_file, delimiter=';')\n                    for row in csv_reader:\n                        users_list = row\n    \n                # Random felhasználó kiválasztása a bejelentkezéshez\n                random_user_index = random.randint(0, len(users_list) - 1)\n                random_user_name = users_list[random_user_index]\n                user_input_data = [random_user_name, f\"{random_user_name}@hotmail.com\", \"Userpass1\"]\n    \n                # Bejelentkezési űrlap feltöltése\n                for i in range(len(user_input_data) - 1):\n                    driver.find_element_by_xpath(f\"//fieldset[{i + 1}]/input\").send_keys(user_input_data[i + 1])\n    \n                time.sleep(1)\n    \n                driver.find_element_by_tag_name(\"button\").click()\n    \n                time.sleep(2)\n    \n                # Bejelentkezés tényének ellenőrzése\n                username_check = driver.find_element_by_xpath(\"//a[starts-with(@href, '#/@')]\").text\n                assert username_check == user_input_data[0], f\"Test Failed: User is not logged in ({user_input_data[0]}).\"\n    \n                time.sleep(2)\n    \n>           login_process()\n\ndocs/testcases/test_login.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def login_process():\n        driver.find_element_by_xpath(\"//a[@href='#/login']\").click()\n    \n        # Automata regisztrációval létrejött felhasználók beolvasása\n>       with open('registered_users.csv') as users_file:\nE       FileNotFoundError: [Errno 2] No such file or directory: 'registered_users.csv'\n\ndocs/testcases/test_login.py:25: FileNotFoundError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "c650e2860e13bb6c",
      "name" : "log",
      "source" : "c650e2860e13bb6c.txt",
      "type" : "text/plain",
      "size" : 344
    }, {
      "uid" : "1a3c1ce904c9a756",
      "name" : "stderr",
      "source" : "1a3c1ce904c9a756.txt",
      "type" : "text/plain",
      "size" : 215
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "docs.testcases"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "host",
    "value" : "fv-az39-971"
  }, {
    "name" : "thread",
    "value" : "3747-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "docs.testcases.test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "f42175803bfab318.json",
  "parameterValues" : [ ]
}